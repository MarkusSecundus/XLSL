State 20 conflicts: 11 reduce/reduce
State 24 conflicts: 1 shift/reduce
State 42 conflicts: 16 reduce/reduce
State 45 conflicts: 10 shift/reduce
State 46 conflicts: 10 shift/reduce
State 47 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 84 conflicts: 2 shift/reduce
State 85 conflicts: 2 shift/reduce
State 86 conflicts: 10 shift/reduce
State 87 conflicts: 10 shift/reduce
State 88 conflicts: 10 shift/reduce
State 89 conflicts: 10 shift/reduce
State 90 conflicts: 10 shift/reduce
State 91 conflicts: 10 shift/reduce
State 92 conflicts: 10 shift/reduce
State 93 conflicts: 10 shift/reduce
State 94 conflicts: 10 shift/reduce
State 95 conflicts: 10 shift/reduce
State 121 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 identifierText: ID
    2               | ID DOT identifierText

    3 identifier: identifierText
    4           | SELF

    5 imports: IMPORT identifier SEMICOLON
    6        | IMPORT identifier SEMICOLON imports

    7 multiplyExpression: NUMBER
    8                   | identifier
    9                   | functionCall
   10                   | OPENPAREN multiplyExpression CLOSEPAREN
   11                   | multiplyExpression TIMES multiplyExpression
   12                   | multiplyExpression DIVIDE multiplyExpression

   13 expression: multiplyExpression
   14           | expression PLUS expression
   15           | expression MINUS expression
   16           | MINUS expression
   17           | booleanExpression
   18           | structInstantiation
   19           | stringLiteral
   20           | ternary
   21           | OPENPAREN expression CLOSEPAREN

   22 booleanExpression: TRUE
   23                  | FALSE
   24                  | identifier
   25                  | OPENPAREN booleanExpression CLOSEPAREN
   26                  | expression EQ expression
   27                  | expression NEQ expression
   28                  | expression LT expression
   29                  | expression GT expression
   30                  | expression LE expression
   31                  | expression GE expression
   32                  | NOT expression
   33                  | expression AND expression
   34                  | expression OR expression

   35 type: TEXT
   36     | NUMBERTOKEN
   37     | LOGICAL
   38     | VOID
   39     | identifier

   40 variableDeclaration: type ID SEMICOLON

   41 variableDefinition: type ID ASSIGN expression SEMICOLON

   42 argList: type ID
   43        | type ID COMMA argList

   44 functionDeclaration: type ID OPENPAREN CLOSEPAREN OPENCURLY body CLOSECURLY
   45                    | type ID OPENPAREN CLOSEPAREN OPENCURLY CLOSECURLY
   46                    | type ID OPENPAREN argList CLOSEPAREN OPENCURLY body CLOSECURLY
   47                    | type ID OPENPAREN argList CLOSEPAREN OPENCURLY CLOSECURLY

   48 exprList: expression
   49         | expression COMMA exprList

   50 functionCall: identifier OPENPAREN CLOSEPAREN
   51             | identifier OPENPAREN exprList CLOSEPAREN

   52 variableDeclarationList: variableDeclaration
   53                        | variableDeclaration variableDeclarationList

   54 structDeclaration: STRUCT ID OPENCURLY variableDeclarationList CLOSECURLY
   55                  | STRUCT ID OPENCURLY CLOSECURLY

   56 structInstantiation: identifier OPENCURLY exprList CLOSECURLY

   57 stringLiteral: DOUBLEQUOTEDSTRING
   58              | SINGLEQUOTEDSTRING

   59 ternary: booleanExpression QUESTION expression COLON expression

   60 namespaceDeclaration: NAMESPACE identifier OPENCURLY body CLOSECURLY
   61                     | NAMESPACE identifier OPENCURLY CLOSECURLY

   62 return: RETURN SEMICOLON
   63       | RETURN expression SEMICOLON

   64 statement: variableDefinition
   65          | structDeclaration
   66          | namespaceDeclaration
   67          | expression SEMICOLON
   68          | functionDeclaration
   69          | return

   70 body: statement
   71     | statement body

   72 program: %empty
   73        | body
   74        | imports
   75        | imports body


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IMPORT <tokenText> (258) 5 6
    NAMESPACE <tokenText> (259) 60 61
    STRUCT <tokenText> (260) 54 55
    SELF <tokenText> (261) 4
    TRUE <tokenText> (262) 22
    FALSE <tokenText> (263) 23
    TEXT <tokenText> (264) 35
    LOGICAL <tokenText> (265) 37
    NUMBERTOKEN <tokenText> (266) 36
    VOID <tokenText> (267) 38
    RETURN <tokenText> (268) 62 63
    NUMBER <tokenText> (269) 7
    SINGLEQUOTEDSTRING <tokenText> (270) 58
    DOUBLEQUOTEDSTRING <tokenText> (271) 57
    ID <tokenText> (272) 1 2 40 41 42 43 44 45 46 47 54 55
    PLUS <tokenText> (273) 14
    MINUS <tokenText> (274) 15 16
    TIMES <tokenText> (275) 11
    DIVIDE <tokenText> (276) 12
    EQ <tokenText> (277) 26
    NEQ <tokenText> (278) 27
    LT <tokenText> (279) 28
    GT <tokenText> (280) 29
    LE <tokenText> (281) 30
    GE <tokenText> (282) 31
    AND <tokenText> (283) 33
    OR <tokenText> (284) 34
    NOT <tokenText> (285) 32
    ASSIGN <tokenText> (286) 41
    COMMA <tokenText> (287) 43 49
    SEMICOLON <tokenText> (288) 5 6 40 41 62 63 67
    COLON <tokenText> (289) 59
    QUESTION <tokenText> (290) 59
    DOT <tokenText> (291) 2
    OPENPAREN <tokenText> (292) 10 21 25 44 45 46 47 50 51
    CLOSEPAREN <tokenText> (293) 10 21 25 44 45 46 47 50 51
    OPENCURLY <tokenText> (294) 44 45 46 47 54 55 56 60 61
    CLOSECURLY <tokenText> (295) 44 45 46 47 54 55 56 60 61


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    identifierText <identifierText> (42)
        on left: 1 2
        on right: 2 3
    identifier <identifier> (43)
        on left: 3 4
        on right: 5 6 8 24 39 50 51 56 60 61
    imports <imports> (44)
        on left: 5 6
        on right: 6 74 75
    multiplyExpression <multiplyExpression> (45)
        on left: 7 8 9 10 11 12
        on right: 10 11 12 13
    expression <expression> (46)
        on left: 13 14 15 16 17 18 19 20 21
        on right: 14 15 16 21 26 27 28 29 30 31 32 33 34 41 48 49 59 63 67
    booleanExpression <booleanExpression> (47)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34
        on right: 17 25 59
    type <type> (48)
        on left: 35 36 37 38 39
        on right: 40 41 42 43 44 45 46 47
    variableDeclaration <variableDeclaration> (49)
        on left: 40
        on right: 52 53
    variableDefinition <variableDefinition> (50)
        on left: 41
        on right: 64
    argList <argList> (51)
        on left: 42 43
        on right: 43 46 47
    functionDeclaration <functionDeclaration> (52)
        on left: 44 45 46 47
        on right: 68
    exprList <exprList> (53)
        on left: 48 49
        on right: 49 51 56
    functionCall <functionCall> (54)
        on left: 50 51
        on right: 9
    variableDeclarationList <variableDeclarationList> (55)
        on left: 52 53
        on right: 53 54
    structDeclaration <structDeclaration> (56)
        on left: 54 55
        on right: 65
    structInstantiation <structInstantiation> (57)
        on left: 56
        on right: 18
    stringLiteral <stringLiteral> (58)
        on left: 57 58
        on right: 19
    ternary <ternary> (59)
        on left: 59
        on right: 20
    namespaceDeclaration <namespaceDeclaration> (60)
        on left: 60 61
        on right: 66
    return <returnStatement> (61)
        on left: 62 63
        on right: 69
    statement <statement> (62)
        on left: 64 65 66 67 68 69
        on right: 70 71
    body <body> (63)
        on left: 70 71
        on right: 44 46 60 71 73 75
    program <program> (64)
        on left: 72 73 74 75
        on right: 0


State 0

    0 $accept: . program $end

    IMPORT              shift, and go to state 1
    NAMESPACE           shift, and go to state 2
    STRUCT              shift, and go to state 3
    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    TEXT                shift, and go to state 7
    LOGICAL             shift, and go to state 8
    NUMBERTOKEN         shift, and go to state 9
    VOID                shift, and go to state 10
    RETURN              shift, and go to state 11
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    $default  reduce using rule 72 (program)

    identifierText        go to state 19
    identifier            go to state 20
    imports               go to state 21
    multiplyExpression    go to state 22
    expression            go to state 23
    booleanExpression     go to state 24
    type                  go to state 25
    variableDefinition    go to state 26
    functionDeclaration   go to state 27
    functionCall          go to state 28
    structDeclaration     go to state 29
    structInstantiation   go to state 30
    stringLiteral         go to state 31
    ternary               go to state 32
    namespaceDeclaration  go to state 33
    return                go to state 34
    statement             go to state 35
    body                  go to state 36
    program               go to state 37


State 1

    5 imports: IMPORT . identifier SEMICOLON
    6        | IMPORT . identifier SEMICOLON imports

    SELF  shift, and go to state 4
    ID    shift, and go to state 15

    identifierText  go to state 19
    identifier      go to state 38


State 2

   60 namespaceDeclaration: NAMESPACE . identifier OPENCURLY body CLOSECURLY
   61                     | NAMESPACE . identifier OPENCURLY CLOSECURLY

    SELF  shift, and go to state 4
    ID    shift, and go to state 15

    identifierText  go to state 19
    identifier      go to state 39


State 3

   54 structDeclaration: STRUCT . ID OPENCURLY variableDeclarationList CLOSECURLY
   55                  | STRUCT . ID OPENCURLY CLOSECURLY

    ID  shift, and go to state 40


State 4

    4 identifier: SELF .

    $default  reduce using rule 4 (identifier)


State 5

   22 booleanExpression: TRUE .

    $default  reduce using rule 22 (booleanExpression)


State 6

   23 booleanExpression: FALSE .

    $default  reduce using rule 23 (booleanExpression)


State 7

   35 type: TEXT .

    $default  reduce using rule 35 (type)


State 8

   37 type: LOGICAL .

    $default  reduce using rule 37 (type)


State 9

   36 type: NUMBERTOKEN .

    $default  reduce using rule 36 (type)


State 10

   38 type: VOID .

    $default  reduce using rule 38 (type)


State 11

   62 return: RETURN . SEMICOLON
   63       | RETURN . expression SEMICOLON

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    SEMICOLON           shift, and go to state 41
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 43
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 12

    7 multiplyExpression: NUMBER .

    $default  reduce using rule 7 (multiplyExpression)


State 13

   58 stringLiteral: SINGLEQUOTEDSTRING .

    $default  reduce using rule 58 (stringLiteral)


State 14

   57 stringLiteral: DOUBLEQUOTEDSTRING .

    $default  reduce using rule 57 (stringLiteral)


State 15

    1 identifierText: ID .
    2               | ID . DOT identifierText

    DOT  shift, and go to state 44

    $default  reduce using rule 1 (identifierText)


State 16

   16 expression: MINUS . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 45
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 17

   32 booleanExpression: NOT . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 46
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 18

   10 multiplyExpression: OPENPAREN . multiplyExpression CLOSEPAREN
   21 expression: OPENPAREN . expression CLOSEPAREN
   25 booleanExpression: OPENPAREN . booleanExpression CLOSEPAREN

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 47
    expression           go to state 48
    booleanExpression    go to state 49
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 19

    3 identifier: identifierText .

    $default  reduce using rule 3 (identifier)


State 20

    8 multiplyExpression: identifier .
   24 booleanExpression: identifier .
   39 type: identifier .
   50 functionCall: identifier . OPENPAREN CLOSEPAREN
   51             | identifier . OPENPAREN exprList CLOSEPAREN
   56 structInstantiation: identifier . OPENCURLY exprList CLOSECURLY

    OPENPAREN  shift, and go to state 50
    OPENCURLY  shift, and go to state 51

    ID         reduce using rule 39 (type)
    PLUS       reduce using rule 8 (multiplyExpression)
    PLUS       [reduce using rule 24 (booleanExpression)]
    MINUS      reduce using rule 8 (multiplyExpression)
    MINUS      [reduce using rule 24 (booleanExpression)]
    EQ         reduce using rule 8 (multiplyExpression)
    EQ         [reduce using rule 24 (booleanExpression)]
    NEQ        reduce using rule 8 (multiplyExpression)
    NEQ        [reduce using rule 24 (booleanExpression)]
    LT         reduce using rule 8 (multiplyExpression)
    LT         [reduce using rule 24 (booleanExpression)]
    GT         reduce using rule 8 (multiplyExpression)
    GT         [reduce using rule 24 (booleanExpression)]
    LE         reduce using rule 8 (multiplyExpression)
    LE         [reduce using rule 24 (booleanExpression)]
    GE         reduce using rule 8 (multiplyExpression)
    GE         [reduce using rule 24 (booleanExpression)]
    AND        reduce using rule 8 (multiplyExpression)
    AND        [reduce using rule 24 (booleanExpression)]
    OR         reduce using rule 8 (multiplyExpression)
    OR         [reduce using rule 24 (booleanExpression)]
    SEMICOLON  reduce using rule 8 (multiplyExpression)
    SEMICOLON  [reduce using rule 24 (booleanExpression)]
    QUESTION   reduce using rule 24 (booleanExpression)
    $default   reduce using rule 8 (multiplyExpression)


State 21

   74 program: imports .
   75        | imports . body

    NAMESPACE           shift, and go to state 2
    STRUCT              shift, and go to state 3
    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    TEXT                shift, and go to state 7
    LOGICAL             shift, and go to state 8
    NUMBERTOKEN         shift, and go to state 9
    VOID                shift, and go to state 10
    RETURN              shift, and go to state 11
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    $default  reduce using rule 74 (program)

    identifierText        go to state 19
    identifier            go to state 20
    multiplyExpression    go to state 22
    expression            go to state 23
    booleanExpression     go to state 24
    type                  go to state 25
    variableDefinition    go to state 26
    functionDeclaration   go to state 27
    functionCall          go to state 28
    structDeclaration     go to state 29
    structInstantiation   go to state 30
    stringLiteral         go to state 31
    ternary               go to state 32
    namespaceDeclaration  go to state 33
    return                go to state 34
    statement             go to state 35
    body                  go to state 52


State 22

   11 multiplyExpression: multiplyExpression . TIMES multiplyExpression
   12                   | multiplyExpression . DIVIDE multiplyExpression
   13 expression: multiplyExpression .

    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54

    $default  reduce using rule 13 (expression)


State 23

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   67 statement: expression . SEMICOLON

    PLUS       shift, and go to state 55
    MINUS      shift, and go to state 56
    EQ         shift, and go to state 57
    NEQ        shift, and go to state 58
    LT         shift, and go to state 59
    GT         shift, and go to state 60
    LE         shift, and go to state 61
    GE         shift, and go to state 62
    AND        shift, and go to state 63
    OR         shift, and go to state 64
    SEMICOLON  shift, and go to state 65


State 24

   17 expression: booleanExpression .
   59 ternary: booleanExpression . QUESTION expression COLON expression

    QUESTION  shift, and go to state 66

    QUESTION  [reduce using rule 17 (expression)]
    $default  reduce using rule 17 (expression)


State 25

   41 variableDefinition: type . ID ASSIGN expression SEMICOLON
   44 functionDeclaration: type . ID OPENPAREN CLOSEPAREN OPENCURLY body CLOSECURLY
   45                    | type . ID OPENPAREN CLOSEPAREN OPENCURLY CLOSECURLY
   46                    | type . ID OPENPAREN argList CLOSEPAREN OPENCURLY body CLOSECURLY
   47                    | type . ID OPENPAREN argList CLOSEPAREN OPENCURLY CLOSECURLY

    ID  shift, and go to state 67


State 26

   64 statement: variableDefinition .

    $default  reduce using rule 64 (statement)


State 27

   68 statement: functionDeclaration .

    $default  reduce using rule 68 (statement)


State 28

    9 multiplyExpression: functionCall .

    $default  reduce using rule 9 (multiplyExpression)


State 29

   65 statement: structDeclaration .

    $default  reduce using rule 65 (statement)


State 30

   18 expression: structInstantiation .

    $default  reduce using rule 18 (expression)


State 31

   19 expression: stringLiteral .

    $default  reduce using rule 19 (expression)


State 32

   20 expression: ternary .

    $default  reduce using rule 20 (expression)


State 33

   66 statement: namespaceDeclaration .

    $default  reduce using rule 66 (statement)


State 34

   69 statement: return .

    $default  reduce using rule 69 (statement)


State 35

   70 body: statement .
   71     | statement . body

    NAMESPACE           shift, and go to state 2
    STRUCT              shift, and go to state 3
    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    TEXT                shift, and go to state 7
    LOGICAL             shift, and go to state 8
    NUMBERTOKEN         shift, and go to state 9
    VOID                shift, and go to state 10
    RETURN              shift, and go to state 11
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    $default  reduce using rule 70 (body)

    identifierText        go to state 19
    identifier            go to state 20
    multiplyExpression    go to state 22
    expression            go to state 23
    booleanExpression     go to state 24
    type                  go to state 25
    variableDefinition    go to state 26
    functionDeclaration   go to state 27
    functionCall          go to state 28
    structDeclaration     go to state 29
    structInstantiation   go to state 30
    stringLiteral         go to state 31
    ternary               go to state 32
    namespaceDeclaration  go to state 33
    return                go to state 34
    statement             go to state 35
    body                  go to state 68


State 36

   73 program: body .

    $default  reduce using rule 73 (program)


State 37

    0 $accept: program . $end

    $end  shift, and go to state 69


State 38

    5 imports: IMPORT identifier . SEMICOLON
    6        | IMPORT identifier . SEMICOLON imports

    SEMICOLON  shift, and go to state 70


State 39

   60 namespaceDeclaration: NAMESPACE identifier . OPENCURLY body CLOSECURLY
   61                     | NAMESPACE identifier . OPENCURLY CLOSECURLY

    OPENCURLY  shift, and go to state 71


State 40

   54 structDeclaration: STRUCT ID . OPENCURLY variableDeclarationList CLOSECURLY
   55                  | STRUCT ID . OPENCURLY CLOSECURLY

    OPENCURLY  shift, and go to state 72


State 41

   62 return: RETURN SEMICOLON .

    $default  reduce using rule 62 (return)


State 42

    8 multiplyExpression: identifier .
   24 booleanExpression: identifier .
   50 functionCall: identifier . OPENPAREN CLOSEPAREN
   51             | identifier . OPENPAREN exprList CLOSEPAREN
   56 structInstantiation: identifier . OPENCURLY exprList CLOSECURLY

    OPENPAREN  shift, and go to state 50
    OPENCURLY  shift, and go to state 51

    PLUS        reduce using rule 8 (multiplyExpression)
    PLUS        [reduce using rule 24 (booleanExpression)]
    MINUS       reduce using rule 8 (multiplyExpression)
    MINUS       [reduce using rule 24 (booleanExpression)]
    EQ          reduce using rule 8 (multiplyExpression)
    EQ          [reduce using rule 24 (booleanExpression)]
    NEQ         reduce using rule 8 (multiplyExpression)
    NEQ         [reduce using rule 24 (booleanExpression)]
    LT          reduce using rule 8 (multiplyExpression)
    LT          [reduce using rule 24 (booleanExpression)]
    GT          reduce using rule 8 (multiplyExpression)
    GT          [reduce using rule 24 (booleanExpression)]
    LE          reduce using rule 8 (multiplyExpression)
    LE          [reduce using rule 24 (booleanExpression)]
    GE          reduce using rule 8 (multiplyExpression)
    GE          [reduce using rule 24 (booleanExpression)]
    AND         reduce using rule 8 (multiplyExpression)
    AND         [reduce using rule 24 (booleanExpression)]
    OR          reduce using rule 8 (multiplyExpression)
    OR          [reduce using rule 24 (booleanExpression)]
    COMMA       reduce using rule 8 (multiplyExpression)
    COMMA       [reduce using rule 24 (booleanExpression)]
    SEMICOLON   reduce using rule 8 (multiplyExpression)
    SEMICOLON   [reduce using rule 24 (booleanExpression)]
    COLON       reduce using rule 8 (multiplyExpression)
    COLON       [reduce using rule 24 (booleanExpression)]
    QUESTION    reduce using rule 8 (multiplyExpression)
    QUESTION    [reduce using rule 24 (booleanExpression)]
    CLOSEPAREN  reduce using rule 8 (multiplyExpression)
    CLOSEPAREN  [reduce using rule 24 (booleanExpression)]
    CLOSECURLY  reduce using rule 8 (multiplyExpression)
    CLOSECURLY  [reduce using rule 24 (booleanExpression)]
    $default    reduce using rule 8 (multiplyExpression)


State 43

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   63 return: RETURN expression . SEMICOLON

    PLUS       shift, and go to state 55
    MINUS      shift, and go to state 56
    EQ         shift, and go to state 57
    NEQ        shift, and go to state 58
    LT         shift, and go to state 59
    GT         shift, and go to state 60
    LE         shift, and go to state 61
    GE         shift, and go to state 62
    AND        shift, and go to state 63
    OR         shift, and go to state 64
    SEMICOLON  shift, and go to state 73


State 44

    2 identifierText: ID DOT . identifierText

    ID  shift, and go to state 15

    identifierText  go to state 74


State 45

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   16           | MINUS expression .
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 16 (expression)]
    MINUS     [reduce using rule 16 (expression)]
    EQ        [reduce using rule 16 (expression)]
    NEQ       [reduce using rule 16 (expression)]
    LT        [reduce using rule 16 (expression)]
    GT        [reduce using rule 16 (expression)]
    LE        [reduce using rule 16 (expression)]
    GE        [reduce using rule 16 (expression)]
    AND       [reduce using rule 16 (expression)]
    OR        [reduce using rule 16 (expression)]
    $default  reduce using rule 16 (expression)


State 46

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   32                  | NOT expression .
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 32 (booleanExpression)]
    MINUS     [reduce using rule 32 (booleanExpression)]
    EQ        [reduce using rule 32 (booleanExpression)]
    NEQ       [reduce using rule 32 (booleanExpression)]
    LT        [reduce using rule 32 (booleanExpression)]
    GT        [reduce using rule 32 (booleanExpression)]
    LE        [reduce using rule 32 (booleanExpression)]
    GE        [reduce using rule 32 (booleanExpression)]
    AND       [reduce using rule 32 (booleanExpression)]
    OR        [reduce using rule 32 (booleanExpression)]
    $default  reduce using rule 32 (booleanExpression)


State 47

   10 multiplyExpression: OPENPAREN multiplyExpression . CLOSEPAREN
   11                   | multiplyExpression . TIMES multiplyExpression
   12                   | multiplyExpression . DIVIDE multiplyExpression
   13 expression: multiplyExpression .

    TIMES       shift, and go to state 53
    DIVIDE      shift, and go to state 54
    CLOSEPAREN  shift, and go to state 75

    CLOSEPAREN  [reduce using rule 13 (expression)]
    $default    reduce using rule 13 (expression)


State 48

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   21           | OPENPAREN expression . CLOSEPAREN
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS        shift, and go to state 55
    MINUS       shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    LT          shift, and go to state 59
    GT          shift, and go to state 60
    LE          shift, and go to state 61
    GE          shift, and go to state 62
    AND         shift, and go to state 63
    OR          shift, and go to state 64
    CLOSEPAREN  shift, and go to state 76


State 49

   17 expression: booleanExpression .
   25 booleanExpression: OPENPAREN booleanExpression . CLOSEPAREN
   59 ternary: booleanExpression . QUESTION expression COLON expression

    QUESTION    shift, and go to state 66
    CLOSEPAREN  shift, and go to state 77

    CLOSEPAREN  [reduce using rule 17 (expression)]
    $default    reduce using rule 17 (expression)


State 50

   50 functionCall: identifier OPENPAREN . CLOSEPAREN
   51             | identifier OPENPAREN . exprList CLOSEPAREN

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18
    CLOSEPAREN          shift, and go to state 78

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 79
    booleanExpression    go to state 24
    exprList             go to state 80
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 51

   56 structInstantiation: identifier OPENCURLY . exprList CLOSECURLY

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 79
    booleanExpression    go to state 24
    exprList             go to state 81
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 52

   75 program: imports body .

    $default  reduce using rule 75 (program)


State 53

   11 multiplyExpression: multiplyExpression TIMES . multiplyExpression

    SELF       shift, and go to state 4
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 15
    OPENPAREN  shift, and go to state 82

    identifierText      go to state 19
    identifier          go to state 83
    multiplyExpression  go to state 84
    functionCall        go to state 28


State 54

   12 multiplyExpression: multiplyExpression DIVIDE . multiplyExpression

    SELF       shift, and go to state 4
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 15
    OPENPAREN  shift, and go to state 82

    identifierText      go to state 19
    identifier          go to state 83
    multiplyExpression  go to state 85
    functionCall        go to state 28


State 55

   14 expression: expression PLUS . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 86
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 56

   15 expression: expression MINUS . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 87
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 57

   26 booleanExpression: expression EQ . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 88
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 58

   27 booleanExpression: expression NEQ . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 89
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 59

   28 booleanExpression: expression LT . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 90
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 60

   29 booleanExpression: expression GT . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 91
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 61

   30 booleanExpression: expression LE . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 92
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 62

   31 booleanExpression: expression GE . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 93
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 63

   33 booleanExpression: expression AND . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 94
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 64

   34 booleanExpression: expression OR . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 95
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 65

   67 statement: expression SEMICOLON .

    $default  reduce using rule 67 (statement)


State 66

   59 ternary: booleanExpression QUESTION . expression COLON expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 96
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 67

   41 variableDefinition: type ID . ASSIGN expression SEMICOLON
   44 functionDeclaration: type ID . OPENPAREN CLOSEPAREN OPENCURLY body CLOSECURLY
   45                    | type ID . OPENPAREN CLOSEPAREN OPENCURLY CLOSECURLY
   46                    | type ID . OPENPAREN argList CLOSEPAREN OPENCURLY body CLOSECURLY
   47                    | type ID . OPENPAREN argList CLOSEPAREN OPENCURLY CLOSECURLY

    ASSIGN     shift, and go to state 97
    OPENPAREN  shift, and go to state 98


State 68

   71 body: statement body .

    $default  reduce using rule 71 (body)


State 69

    0 $accept: program $end .

    $default  accept


State 70

    5 imports: IMPORT identifier SEMICOLON .
    6        | IMPORT identifier SEMICOLON . imports

    IMPORT  shift, and go to state 1

    $default  reduce using rule 5 (imports)

    imports  go to state 99


State 71

   60 namespaceDeclaration: NAMESPACE identifier OPENCURLY . body CLOSECURLY
   61                     | NAMESPACE identifier OPENCURLY . CLOSECURLY

    NAMESPACE           shift, and go to state 2
    STRUCT              shift, and go to state 3
    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    TEXT                shift, and go to state 7
    LOGICAL             shift, and go to state 8
    NUMBERTOKEN         shift, and go to state 9
    VOID                shift, and go to state 10
    RETURN              shift, and go to state 11
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18
    CLOSECURLY          shift, and go to state 100

    identifierText        go to state 19
    identifier            go to state 20
    multiplyExpression    go to state 22
    expression            go to state 23
    booleanExpression     go to state 24
    type                  go to state 25
    variableDefinition    go to state 26
    functionDeclaration   go to state 27
    functionCall          go to state 28
    structDeclaration     go to state 29
    structInstantiation   go to state 30
    stringLiteral         go to state 31
    ternary               go to state 32
    namespaceDeclaration  go to state 33
    return                go to state 34
    statement             go to state 35
    body                  go to state 101


State 72

   54 structDeclaration: STRUCT ID OPENCURLY . variableDeclarationList CLOSECURLY
   55                  | STRUCT ID OPENCURLY . CLOSECURLY

    SELF         shift, and go to state 4
    TEXT         shift, and go to state 7
    LOGICAL      shift, and go to state 8
    NUMBERTOKEN  shift, and go to state 9
    VOID         shift, and go to state 10
    ID           shift, and go to state 15
    CLOSECURLY   shift, and go to state 102

    identifierText           go to state 19
    identifier               go to state 103
    type                     go to state 104
    variableDeclaration      go to state 105
    variableDeclarationList  go to state 106


State 73

   63 return: RETURN expression SEMICOLON .

    $default  reduce using rule 63 (return)


State 74

    2 identifierText: ID DOT identifierText .

    $default  reduce using rule 2 (identifierText)


State 75

   10 multiplyExpression: OPENPAREN multiplyExpression CLOSEPAREN .

    $default  reduce using rule 10 (multiplyExpression)


State 76

   21 expression: OPENPAREN expression CLOSEPAREN .

    $default  reduce using rule 21 (expression)


State 77

   25 booleanExpression: OPENPAREN booleanExpression CLOSEPAREN .

    $default  reduce using rule 25 (booleanExpression)


State 78

   50 functionCall: identifier OPENPAREN CLOSEPAREN .

    $default  reduce using rule 50 (functionCall)


State 79

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   48 exprList: expression .
   49         | expression . COMMA exprList

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64
    COMMA  shift, and go to state 107

    $default  reduce using rule 48 (exprList)


State 80

   51 functionCall: identifier OPENPAREN exprList . CLOSEPAREN

    CLOSEPAREN  shift, and go to state 108


State 81

   56 structInstantiation: identifier OPENCURLY exprList . CLOSECURLY

    CLOSECURLY  shift, and go to state 109


State 82

   10 multiplyExpression: OPENPAREN . multiplyExpression CLOSEPAREN

    SELF       shift, and go to state 4
    NUMBER     shift, and go to state 12
    ID         shift, and go to state 15
    OPENPAREN  shift, and go to state 82

    identifierText      go to state 19
    identifier          go to state 83
    multiplyExpression  go to state 110
    functionCall        go to state 28


State 83

    8 multiplyExpression: identifier .
   50 functionCall: identifier . OPENPAREN CLOSEPAREN
   51             | identifier . OPENPAREN exprList CLOSEPAREN

    OPENPAREN  shift, and go to state 50

    $default  reduce using rule 8 (multiplyExpression)


State 84

   11 multiplyExpression: multiplyExpression . TIMES multiplyExpression
   11                   | multiplyExpression TIMES multiplyExpression .
   12                   | multiplyExpression . DIVIDE multiplyExpression

    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54

    TIMES     [reduce using rule 11 (multiplyExpression)]
    DIVIDE    [reduce using rule 11 (multiplyExpression)]
    $default  reduce using rule 11 (multiplyExpression)


State 85

   11 multiplyExpression: multiplyExpression . TIMES multiplyExpression
   12                   | multiplyExpression . DIVIDE multiplyExpression
   12                   | multiplyExpression DIVIDE multiplyExpression .

    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54

    TIMES     [reduce using rule 12 (multiplyExpression)]
    DIVIDE    [reduce using rule 12 (multiplyExpression)]
    $default  reduce using rule 12 (multiplyExpression)


State 86

   14 expression: expression . PLUS expression
   14           | expression PLUS expression .
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 14 (expression)]
    MINUS     [reduce using rule 14 (expression)]
    EQ        [reduce using rule 14 (expression)]
    NEQ       [reduce using rule 14 (expression)]
    LT        [reduce using rule 14 (expression)]
    GT        [reduce using rule 14 (expression)]
    LE        [reduce using rule 14 (expression)]
    GE        [reduce using rule 14 (expression)]
    AND       [reduce using rule 14 (expression)]
    OR        [reduce using rule 14 (expression)]
    $default  reduce using rule 14 (expression)


State 87

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   15           | expression MINUS expression .
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 15 (expression)]
    MINUS     [reduce using rule 15 (expression)]
    EQ        [reduce using rule 15 (expression)]
    NEQ       [reduce using rule 15 (expression)]
    LT        [reduce using rule 15 (expression)]
    GT        [reduce using rule 15 (expression)]
    LE        [reduce using rule 15 (expression)]
    GE        [reduce using rule 15 (expression)]
    AND       [reduce using rule 15 (expression)]
    OR        [reduce using rule 15 (expression)]
    $default  reduce using rule 15 (expression)


State 88

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   26                  | expression EQ expression .
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 26 (booleanExpression)]
    MINUS     [reduce using rule 26 (booleanExpression)]
    EQ        [reduce using rule 26 (booleanExpression)]
    NEQ       [reduce using rule 26 (booleanExpression)]
    LT        [reduce using rule 26 (booleanExpression)]
    GT        [reduce using rule 26 (booleanExpression)]
    LE        [reduce using rule 26 (booleanExpression)]
    GE        [reduce using rule 26 (booleanExpression)]
    AND       [reduce using rule 26 (booleanExpression)]
    OR        [reduce using rule 26 (booleanExpression)]
    $default  reduce using rule 26 (booleanExpression)


State 89

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   27                  | expression NEQ expression .
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 27 (booleanExpression)]
    MINUS     [reduce using rule 27 (booleanExpression)]
    EQ        [reduce using rule 27 (booleanExpression)]
    NEQ       [reduce using rule 27 (booleanExpression)]
    LT        [reduce using rule 27 (booleanExpression)]
    GT        [reduce using rule 27 (booleanExpression)]
    LE        [reduce using rule 27 (booleanExpression)]
    GE        [reduce using rule 27 (booleanExpression)]
    AND       [reduce using rule 27 (booleanExpression)]
    OR        [reduce using rule 27 (booleanExpression)]
    $default  reduce using rule 27 (booleanExpression)


State 90

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   28                  | expression LT expression .
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 28 (booleanExpression)]
    MINUS     [reduce using rule 28 (booleanExpression)]
    EQ        [reduce using rule 28 (booleanExpression)]
    NEQ       [reduce using rule 28 (booleanExpression)]
    LT        [reduce using rule 28 (booleanExpression)]
    GT        [reduce using rule 28 (booleanExpression)]
    LE        [reduce using rule 28 (booleanExpression)]
    GE        [reduce using rule 28 (booleanExpression)]
    AND       [reduce using rule 28 (booleanExpression)]
    OR        [reduce using rule 28 (booleanExpression)]
    $default  reduce using rule 28 (booleanExpression)


State 91

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   29                  | expression GT expression .
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 29 (booleanExpression)]
    MINUS     [reduce using rule 29 (booleanExpression)]
    EQ        [reduce using rule 29 (booleanExpression)]
    NEQ       [reduce using rule 29 (booleanExpression)]
    LT        [reduce using rule 29 (booleanExpression)]
    GT        [reduce using rule 29 (booleanExpression)]
    LE        [reduce using rule 29 (booleanExpression)]
    GE        [reduce using rule 29 (booleanExpression)]
    AND       [reduce using rule 29 (booleanExpression)]
    OR        [reduce using rule 29 (booleanExpression)]
    $default  reduce using rule 29 (booleanExpression)


State 92

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   30                  | expression LE expression .
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 30 (booleanExpression)]
    MINUS     [reduce using rule 30 (booleanExpression)]
    EQ        [reduce using rule 30 (booleanExpression)]
    NEQ       [reduce using rule 30 (booleanExpression)]
    LT        [reduce using rule 30 (booleanExpression)]
    GT        [reduce using rule 30 (booleanExpression)]
    LE        [reduce using rule 30 (booleanExpression)]
    GE        [reduce using rule 30 (booleanExpression)]
    AND       [reduce using rule 30 (booleanExpression)]
    OR        [reduce using rule 30 (booleanExpression)]
    $default  reduce using rule 30 (booleanExpression)


State 93

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   31                  | expression GE expression .
   33                  | expression . AND expression
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 31 (booleanExpression)]
    MINUS     [reduce using rule 31 (booleanExpression)]
    EQ        [reduce using rule 31 (booleanExpression)]
    NEQ       [reduce using rule 31 (booleanExpression)]
    LT        [reduce using rule 31 (booleanExpression)]
    GT        [reduce using rule 31 (booleanExpression)]
    LE        [reduce using rule 31 (booleanExpression)]
    GE        [reduce using rule 31 (booleanExpression)]
    AND       [reduce using rule 31 (booleanExpression)]
    OR        [reduce using rule 31 (booleanExpression)]
    $default  reduce using rule 31 (booleanExpression)


State 94

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   33                  | expression AND expression .
   34                  | expression . OR expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 33 (booleanExpression)]
    MINUS     [reduce using rule 33 (booleanExpression)]
    EQ        [reduce using rule 33 (booleanExpression)]
    NEQ       [reduce using rule 33 (booleanExpression)]
    LT        [reduce using rule 33 (booleanExpression)]
    GT        [reduce using rule 33 (booleanExpression)]
    LE        [reduce using rule 33 (booleanExpression)]
    GE        [reduce using rule 33 (booleanExpression)]
    AND       [reduce using rule 33 (booleanExpression)]
    OR        [reduce using rule 33 (booleanExpression)]
    $default  reduce using rule 33 (booleanExpression)


State 95

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   34                  | expression OR expression .

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 34 (booleanExpression)]
    MINUS     [reduce using rule 34 (booleanExpression)]
    EQ        [reduce using rule 34 (booleanExpression)]
    NEQ       [reduce using rule 34 (booleanExpression)]
    LT        [reduce using rule 34 (booleanExpression)]
    GT        [reduce using rule 34 (booleanExpression)]
    LE        [reduce using rule 34 (booleanExpression)]
    GE        [reduce using rule 34 (booleanExpression)]
    AND       [reduce using rule 34 (booleanExpression)]
    OR        [reduce using rule 34 (booleanExpression)]
    $default  reduce using rule 34 (booleanExpression)


State 96

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   59 ternary: booleanExpression QUESTION expression . COLON expression

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64
    COLON  shift, and go to state 111


State 97

   41 variableDefinition: type ID ASSIGN . expression SEMICOLON

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 112
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 98

   44 functionDeclaration: type ID OPENPAREN . CLOSEPAREN OPENCURLY body CLOSECURLY
   45                    | type ID OPENPAREN . CLOSEPAREN OPENCURLY CLOSECURLY
   46                    | type ID OPENPAREN . argList CLOSEPAREN OPENCURLY body CLOSECURLY
   47                    | type ID OPENPAREN . argList CLOSEPAREN OPENCURLY CLOSECURLY

    SELF         shift, and go to state 4
    TEXT         shift, and go to state 7
    LOGICAL      shift, and go to state 8
    NUMBERTOKEN  shift, and go to state 9
    VOID         shift, and go to state 10
    ID           shift, and go to state 15
    CLOSEPAREN   shift, and go to state 113

    identifierText  go to state 19
    identifier      go to state 103
    type            go to state 114
    argList         go to state 115


State 99

    6 imports: IMPORT identifier SEMICOLON imports .

    $default  reduce using rule 6 (imports)


State 100

   61 namespaceDeclaration: NAMESPACE identifier OPENCURLY CLOSECURLY .

    $default  reduce using rule 61 (namespaceDeclaration)


State 101

   60 namespaceDeclaration: NAMESPACE identifier OPENCURLY body . CLOSECURLY

    CLOSECURLY  shift, and go to state 116


State 102

   55 structDeclaration: STRUCT ID OPENCURLY CLOSECURLY .

    $default  reduce using rule 55 (structDeclaration)


State 103

   39 type: identifier .

    $default  reduce using rule 39 (type)


State 104

   40 variableDeclaration: type . ID SEMICOLON

    ID  shift, and go to state 117


State 105

   52 variableDeclarationList: variableDeclaration .
   53                        | variableDeclaration . variableDeclarationList

    SELF         shift, and go to state 4
    TEXT         shift, and go to state 7
    LOGICAL      shift, and go to state 8
    NUMBERTOKEN  shift, and go to state 9
    VOID         shift, and go to state 10
    ID           shift, and go to state 15

    $default  reduce using rule 52 (variableDeclarationList)

    identifierText           go to state 19
    identifier               go to state 103
    type                     go to state 104
    variableDeclaration      go to state 105
    variableDeclarationList  go to state 118


State 106

   54 structDeclaration: STRUCT ID OPENCURLY variableDeclarationList . CLOSECURLY

    CLOSECURLY  shift, and go to state 119


State 107

   49 exprList: expression COMMA . exprList

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 79
    booleanExpression    go to state 24
    exprList             go to state 120
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 108

   51 functionCall: identifier OPENPAREN exprList CLOSEPAREN .

    $default  reduce using rule 51 (functionCall)


State 109

   56 structInstantiation: identifier OPENCURLY exprList CLOSECURLY .

    $default  reduce using rule 56 (structInstantiation)


State 110

   10 multiplyExpression: OPENPAREN multiplyExpression . CLOSEPAREN
   11                   | multiplyExpression . TIMES multiplyExpression
   12                   | multiplyExpression . DIVIDE multiplyExpression

    TIMES       shift, and go to state 53
    DIVIDE      shift, and go to state 54
    CLOSEPAREN  shift, and go to state 75


State 111

   59 ternary: booleanExpression QUESTION expression COLON . expression

    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18

    identifierText       go to state 19
    identifier           go to state 42
    multiplyExpression   go to state 22
    expression           go to state 121
    booleanExpression    go to state 24
    functionCall         go to state 28
    structInstantiation  go to state 30
    stringLiteral        go to state 31
    ternary              go to state 32


State 112

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   41 variableDefinition: type ID ASSIGN expression . SEMICOLON

    PLUS       shift, and go to state 55
    MINUS      shift, and go to state 56
    EQ         shift, and go to state 57
    NEQ        shift, and go to state 58
    LT         shift, and go to state 59
    GT         shift, and go to state 60
    LE         shift, and go to state 61
    GE         shift, and go to state 62
    AND        shift, and go to state 63
    OR         shift, and go to state 64
    SEMICOLON  shift, and go to state 122


State 113

   44 functionDeclaration: type ID OPENPAREN CLOSEPAREN . OPENCURLY body CLOSECURLY
   45                    | type ID OPENPAREN CLOSEPAREN . OPENCURLY CLOSECURLY

    OPENCURLY  shift, and go to state 123


State 114

   42 argList: type . ID
   43        | type . ID COMMA argList

    ID  shift, and go to state 124


State 115

   46 functionDeclaration: type ID OPENPAREN argList . CLOSEPAREN OPENCURLY body CLOSECURLY
   47                    | type ID OPENPAREN argList . CLOSEPAREN OPENCURLY CLOSECURLY

    CLOSEPAREN  shift, and go to state 125


State 116

   60 namespaceDeclaration: NAMESPACE identifier OPENCURLY body CLOSECURLY .

    $default  reduce using rule 60 (namespaceDeclaration)


State 117

   40 variableDeclaration: type ID . SEMICOLON

    SEMICOLON  shift, and go to state 126


State 118

   53 variableDeclarationList: variableDeclaration variableDeclarationList .

    $default  reduce using rule 53 (variableDeclarationList)


State 119

   54 structDeclaration: STRUCT ID OPENCURLY variableDeclarationList CLOSECURLY .

    $default  reduce using rule 54 (structDeclaration)


State 120

   49 exprList: expression COMMA exprList .

    $default  reduce using rule 49 (exprList)


State 121

   14 expression: expression . PLUS expression
   15           | expression . MINUS expression
   26 booleanExpression: expression . EQ expression
   27                  | expression . NEQ expression
   28                  | expression . LT expression
   29                  | expression . GT expression
   30                  | expression . LE expression
   31                  | expression . GE expression
   33                  | expression . AND expression
   34                  | expression . OR expression
   59 ternary: booleanExpression QUESTION expression COLON expression .

    PLUS   shift, and go to state 55
    MINUS  shift, and go to state 56
    EQ     shift, and go to state 57
    NEQ    shift, and go to state 58
    LT     shift, and go to state 59
    GT     shift, and go to state 60
    LE     shift, and go to state 61
    GE     shift, and go to state 62
    AND    shift, and go to state 63
    OR     shift, and go to state 64

    PLUS      [reduce using rule 59 (ternary)]
    MINUS     [reduce using rule 59 (ternary)]
    EQ        [reduce using rule 59 (ternary)]
    NEQ       [reduce using rule 59 (ternary)]
    LT        [reduce using rule 59 (ternary)]
    GT        [reduce using rule 59 (ternary)]
    LE        [reduce using rule 59 (ternary)]
    GE        [reduce using rule 59 (ternary)]
    AND       [reduce using rule 59 (ternary)]
    OR        [reduce using rule 59 (ternary)]
    $default  reduce using rule 59 (ternary)


State 122

   41 variableDefinition: type ID ASSIGN expression SEMICOLON .

    $default  reduce using rule 41 (variableDefinition)


State 123

   44 functionDeclaration: type ID OPENPAREN CLOSEPAREN OPENCURLY . body CLOSECURLY
   45                    | type ID OPENPAREN CLOSEPAREN OPENCURLY . CLOSECURLY

    NAMESPACE           shift, and go to state 2
    STRUCT              shift, and go to state 3
    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    TEXT                shift, and go to state 7
    LOGICAL             shift, and go to state 8
    NUMBERTOKEN         shift, and go to state 9
    VOID                shift, and go to state 10
    RETURN              shift, and go to state 11
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18
    CLOSECURLY          shift, and go to state 127

    identifierText        go to state 19
    identifier            go to state 20
    multiplyExpression    go to state 22
    expression            go to state 23
    booleanExpression     go to state 24
    type                  go to state 25
    variableDefinition    go to state 26
    functionDeclaration   go to state 27
    functionCall          go to state 28
    structDeclaration     go to state 29
    structInstantiation   go to state 30
    stringLiteral         go to state 31
    ternary               go to state 32
    namespaceDeclaration  go to state 33
    return                go to state 34
    statement             go to state 35
    body                  go to state 128


State 124

   42 argList: type ID .
   43        | type ID . COMMA argList

    COMMA  shift, and go to state 129

    $default  reduce using rule 42 (argList)


State 125

   46 functionDeclaration: type ID OPENPAREN argList CLOSEPAREN . OPENCURLY body CLOSECURLY
   47                    | type ID OPENPAREN argList CLOSEPAREN . OPENCURLY CLOSECURLY

    OPENCURLY  shift, and go to state 130


State 126

   40 variableDeclaration: type ID SEMICOLON .

    $default  reduce using rule 40 (variableDeclaration)


State 127

   45 functionDeclaration: type ID OPENPAREN CLOSEPAREN OPENCURLY CLOSECURLY .

    $default  reduce using rule 45 (functionDeclaration)


State 128

   44 functionDeclaration: type ID OPENPAREN CLOSEPAREN OPENCURLY body . CLOSECURLY

    CLOSECURLY  shift, and go to state 131


State 129

   43 argList: type ID COMMA . argList

    SELF         shift, and go to state 4
    TEXT         shift, and go to state 7
    LOGICAL      shift, and go to state 8
    NUMBERTOKEN  shift, and go to state 9
    VOID         shift, and go to state 10
    ID           shift, and go to state 15

    identifierText  go to state 19
    identifier      go to state 103
    type            go to state 114
    argList         go to state 132


State 130

   46 functionDeclaration: type ID OPENPAREN argList CLOSEPAREN OPENCURLY . body CLOSECURLY
   47                    | type ID OPENPAREN argList CLOSEPAREN OPENCURLY . CLOSECURLY

    NAMESPACE           shift, and go to state 2
    STRUCT              shift, and go to state 3
    SELF                shift, and go to state 4
    TRUE                shift, and go to state 5
    FALSE               shift, and go to state 6
    TEXT                shift, and go to state 7
    LOGICAL             shift, and go to state 8
    NUMBERTOKEN         shift, and go to state 9
    VOID                shift, and go to state 10
    RETURN              shift, and go to state 11
    NUMBER              shift, and go to state 12
    SINGLEQUOTEDSTRING  shift, and go to state 13
    DOUBLEQUOTEDSTRING  shift, and go to state 14
    ID                  shift, and go to state 15
    MINUS               shift, and go to state 16
    NOT                 shift, and go to state 17
    OPENPAREN           shift, and go to state 18
    CLOSECURLY          shift, and go to state 133

    identifierText        go to state 19
    identifier            go to state 20
    multiplyExpression    go to state 22
    expression            go to state 23
    booleanExpression     go to state 24
    type                  go to state 25
    variableDefinition    go to state 26
    functionDeclaration   go to state 27
    functionCall          go to state 28
    structDeclaration     go to state 29
    structInstantiation   go to state 30
    stringLiteral         go to state 31
    ternary               go to state 32
    namespaceDeclaration  go to state 33
    return                go to state 34
    statement             go to state 35
    body                  go to state 134


State 131

   44 functionDeclaration: type ID OPENPAREN CLOSEPAREN OPENCURLY body CLOSECURLY .

    $default  reduce using rule 44 (functionDeclaration)


State 132

   43 argList: type ID COMMA argList .

    $default  reduce using rule 43 (argList)


State 133

   47 functionDeclaration: type ID OPENPAREN argList CLOSEPAREN OPENCURLY CLOSECURLY .

    $default  reduce using rule 47 (functionDeclaration)


State 134

   46 functionDeclaration: type ID OPENPAREN argList CLOSEPAREN OPENCURLY body . CLOSECURLY

    CLOSECURLY  shift, and go to state 135


State 135

   46 functionDeclaration: type ID OPENPAREN argList CLOSEPAREN OPENCURLY body CLOSECURLY .

    $default  reduce using rule 46 (functionDeclaration)
